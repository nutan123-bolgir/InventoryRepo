@model InventoryRepo.Models.Supplier

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Supplier</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SupplierId" />
            <div class="form-group">
                <label asp-for="SupplierName" class="control-label"></label>
                <input asp-for="SupplierName" class="form-control" />
                <span asp-validation-for="SupplierName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactPerson" class="control-label"></label>
                <input asp-for="ContactPerson" class="form-control" />
                <span asp-validation-for="ContactPerson" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactNumber" class="control-label"></label>
                <input asp-for="ContactNumber" class="form-control" />
                <span asp-validation-for="ContactNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductId" class="control-label"></label>
                @Html.DropDownListFor(model => model.ProductId, (IEnumerable<SelectListItem>)ViewBag.Products, "Select Product", new { @class = "form-control" })
            </div>

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="file" class="control-label">
                    @if (!string.IsNullOrEmpty(Model.SupplierPhoto))
                    {
                        <span>Current File: @Model.SupplierPhoto</span>
                    }
                    else
                    {
                        <span>Choose File</span>
                    }
                </label>

                @if (!string.IsNullOrEmpty(Model.SupplierPhoto))
                {
                    <img src="~/Upload/files/@Model.SupplierPhoto" alt="Product Image" style="max-width: 100px; max-height: 100px;" />
                    <br />
                    <span>Current File: @Model.SupplierPhoto</span>
                    <input type="hidden" asp-for="SupplierPhoto" />
                    <br />
                }

                <input asp-for="file" type="file" class="form-control" />

                <span asp-validation-for="SupplierPhoto" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button class="btn btn-danger ms-2" type="submit"
                        asp-area=""
                        asp-controller="Supplier"
                        asp-action="Delete">
                    Delete
                </button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
